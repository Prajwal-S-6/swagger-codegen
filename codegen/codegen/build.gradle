plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.openapi.generator' version '7.13.0'
}

group = 'com.myapp.impl'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.openapitools:jackson-databind-nullable:0.2.6'
	implementation 'io.swagger.core.v3:swagger-models:2.2.25'
	implementation 'io.swagger.core.v3:swagger-annotations:2.2.25'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
	implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.cucumber:cucumber-java:7.18.1'
	testImplementation 'io.cucumber:cucumber-spring:7.18.1'
	testImplementation 'io.cucumber:cucumber-junit:7.14.0'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

openApiGenerate {

	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/swagger.yaml"
	outputDir = layout.buildDirectory.dir("generated").get().asFile.toString()
	apiPackage = "com.myapp.impl.codegen.api"
	modelPackage = "com.myapp.impl.codegen.model"
	configOptions = [
			useSpringBoot3: "true",
			interfaceOnly: "true",
			delegatePattern: "true",
			generateSupportingFiles: "false",
			java8: "false",
			defaultInterfaces: "false"

	]
}

tasks.compileJava.dependsOn tasks.openApiGenerate
sourceSets.main.java.srcDir(layout.buildDirectory.dir("generated/src/main/java"))

tasks.named('test') {
	useJUnitPlatform()
}
