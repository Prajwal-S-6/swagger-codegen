/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.java.katas.api;

import com.java.katas.model.Employee;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ExampleObject;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-09-19T23:37:43.449747500+05:30[Asia/Calcutta]", comments = "Generator version: 7.13.0")
@Validated
@Tag(name = "employees", description = "the employees API")
public interface EmployeesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /employees : Create new employee
     *
     * @param employee  (required)
     * @return Employee created (status code 201)
     */
    @Operation(
        operationId = "createEmployee",
        summary = "Create new employee",
        responses = {
            @ApiResponse(responseCode = "201", description = "Employee created", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Employee.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/employees",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    
    default ResponseEntity<Employee> _createEmployee(
        @Parameter(name = "Employee", description = "", required = true) @Valid @RequestBody Employee employee
    ) {
        return createEmployee(employee);
    }

    // Override this method
    default  ResponseEntity<Employee> createEmployee(Employee employee) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"firstName\" : \"Willow\", \"lastName\" : \"Smith\", \"id\" : 1 }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /employees : Get all employees
     *
     * @return List of employees (status code 200)
     */
    @Operation(
        operationId = "getEmployees",
        summary = "Get all employees",
        responses = {
            @ApiResponse(responseCode = "200", description = "List of employees", content = {
                @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = Employee.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/employees",
        produces = { "application/json" }
    )
    
    default ResponseEntity<List<Employee>> _getEmployees(
        
    ) {
        return getEmployees();
    }

    // Override this method
    default  ResponseEntity<List<Employee>> getEmployees() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"firstName\" : \"Willow\", \"lastName\" : \"Smith\", \"id\" : 1 }, { \"firstName\" : \"Willow\", \"lastName\" : \"Smith\", \"id\" : 1 } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
